"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[537],{62431:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new empty priority queue.","params":[{"name":"mode?","desc":"The priority behavior mode. Defaults to `\\"min\\"`.","lua_type":"\\"min\\" | \\"max\\""},{"name":"comparator?","desc":"Optional comparator to customize ordering.","lua_type":"(a: number, b: number) -> boolean"}],"returns":[{"desc":"","lua_type":"PriorityQueueType<T>"}],"function_type":"static","source":{"line":117,"path":"src/PriorityQueue.luau"}},{"name":"getPriorityQueue","desc":"Returns a shallow copy of the internal heap array, preserving value-priority pairs.","params":[{"name":"self","desc":"","lua_type":"InternalPriorityQueue<T>"}],"returns":[{"desc":"","lua_type":"{ { value: T, priority: number } }"}],"function_type":"static","source":{"line":138,"path":"src/PriorityQueue.luau"}},{"name":"size","desc":"Returns the number of elements in the priority queue.","params":[{"name":"self","desc":"","lua_type":"InternalPriorityQueue<T>"}],"returns":[{"desc":"","lua_type":"number"}],"function_type":"static","source":{"line":152,"path":"src/PriorityQueue.luau"}},{"name":"copy","desc":"Returns a deep copy of the current priority queue. Throws an error if the priority queue is empty.","params":[{"name":"self","desc":"","lua_type":"InternalPriorityQueue<T>"}],"returns":[{"desc":"","lua_type":"PriorityQueueType<T>"}],"function_type":"static","source":{"line":162,"path":"src/PriorityQueue.luau"}},{"name":"clear","desc":"Removes all elements from the queue.","params":[{"name":"self","desc":"","lua_type":"InternalPriorityQueue<T>"}],"returns":[],"function_type":"static","source":{"line":178,"path":"src/PriorityQueue.luau"}},{"name":"enqueue","desc":"Inserts a value into the queue with the specified priority.","params":[{"name":"self","desc":"","lua_type":"InternalPriorityQueue<T>"},{"name":"value","desc":"The value to enqueue.","lua_type":"T"},{"name":"priority","desc":"The priority of the value.","lua_type":"number"}],"returns":[],"function_type":"static","source":{"line":189,"path":"src/PriorityQueue.luau"}},{"name":"dequeue","desc":"Removes and returns the value with the highest priority (depending on mode).","params":[{"name":"self","desc":"","lua_type":"InternalPriorityQueue<T>"}],"returns":[{"desc":"Returns the dequeued value or nil if the queue is empty.","lua_type":"T?"}],"function_type":"static","source":{"line":211,"path":"src/PriorityQueue.luau"}},{"name":"peek","desc":"Returns the value with the highest priority without removing it.","params":[{"name":"self","desc":"","lua_type":"InternalPriorityQueue<T>"}],"returns":[{"desc":"Returns the value or nil if the queue is empty.","lua_type":"T?"}],"function_type":"static","source":{"line":230,"path":"src/PriorityQueue.luau"}}],"properties":[],"types":[],"name":"PriorityQueue","desc":"PriorityQueue class","source":{"line":30,"path":"src/PriorityQueue.luau"}}')}}]);