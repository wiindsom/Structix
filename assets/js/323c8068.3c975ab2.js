"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[456],{72874:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"ProsAndCons/pros","title":"Pros","description":"---","source":"@site/docs/ProsAndCons/pros.md","sourceDirName":"ProsAndCons","slug":"/ProsAndCons/pros","permalink":"/Structix/docs/ProsAndCons/pros","draft":false,"unlisted":false,"editUrl":"https://github.com/wiindsom/Structix/edit/main/docs/ProsAndCons/pros.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Pros","sidebar_position":1},"sidebar":"defaultSidebar","previous":{"title":"Getting Started","permalink":"/Structix/docs/intro"},"next":{"title":"Cons","permalink":"/Structix/docs/ProsAndCons/cons"}}');var r=n(74848),o=n(28453);const i={title:"Pros",sidebar_position:1},c=void 0,a={},d=[];function l(e){const s={em:"em",hr:"hr",li:"li",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.hr,{}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"\ud83d\udd12Strict Typing & API Safety"})," ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(s.em,{children:"Structix somewhat enforces strict types, reducing runtime errors and catches mistakes early making it great for any scale projects."})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"\ud83d\udcd6Readable, Maintainable Code"})," ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(s.em,{children:"We love readable code!"})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"\u2699\ufe0fCustomizable Behavior"})," ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(s.em,{children:"Support for modes, comparators, and features like min/max in (Heap, Priority Queue) which lets you tailor performance and logic to your needs."})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"\ud83d\udccbUnified Interface"})," ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(s.em,{children:"Consistent methods like size, clear, copy across all structures reduce the learning curve and makes it easy to compare structure sizes/copies."})]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"\ud83c\udf00Safe Cloning & Equality API"})," ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(s.em,{children:"Built in copy/equality methods making it safe and easy to copy/compare the structures."})]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>c});var t=n(96540);const r={},o=t.createContext(r);function i(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);